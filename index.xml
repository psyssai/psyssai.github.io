<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PSYda</title>
    <link>https://psyssai.github.io/</link>
    <description>Recent content on PSYda</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 12 Oct 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://psyssai.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[React]4.영화 App 만들기</title>
      <link>https://psyssai.github.io/frontend/react/react_4_create_movie_app/</link>
      <pubDate>Sat, 12 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://psyssai.github.io/frontend/react/react_4_create_movie_app/</guid>
      <description>안녕하세요. PSYda 입니다.
본 포스팅은 Nomad Coders 의 &amp;ldquo;React JS로 웹서비스 만들기&amp;rdquo;를 통해 학습한 내용을 정리한 것입니다.
이번 포스팅에서는 지금까지 배운 내용을 바탕으로 실제 여기 형태를 가지는 Movie App을 만들어 볼 예정입니다. 세부적으로 알아볼 내용은 아래와 같습니다.
  API로 부터 Movie 데이터 가져오기 Movies App 화면에 띄우기 Movies App에 스타일 입히기 Github page에 Movie App 표시    1. API로 부터 Movie 데이터 가져오기 Javascript를 이용해 외부의 데이터를 가지고 오는 방법에는 jquery, fetch, Axios 등의 방법이 있는데, 그 중 Axios를 이용하겠습니다.</description>
    </item>
    
    <item>
      <title>[React]3.State &amp; Component Life Cycle</title>
      <link>https://psyssai.github.io/frontend/react/react_3_state_lifecycle/</link>
      <pubDate>Fri, 11 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://psyssai.github.io/frontend/react/react_3_state_lifecycle/</guid>
      <description>안녕하세요. PSYda 입니다.
본 포스팅은 Nomad Coders 의 &amp;ldquo;React JS로 웹서비스 만들기&amp;rdquo;를 통해 학습한 내용을 정리한 것입니다.
이번 포스팅에서 알아볼 내용은 아래와 같습니다.
  Class Component State Component LifeCycle    1. Class Component Component는 함수 Component와 Class Component과 있으며, 이전 포스팅에 이어 이번에는 Class Component에 대해 알아보겠습니다.
1.1 Class Component 생성 //App.js import React from &#39;react&#39;; class App extends React.Component{ render(){ return &amp;lt;div&amp;gt;Hello&amp;lt;/div&amp;gt; } } export default App;  1) react import</description>
    </item>
    
    <item>
      <title>[React]2.Component, JSX, Props</title>
      <link>https://psyssai.github.io/frontend/react/react_2_component_jsx/</link>
      <pubDate>Tue, 08 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://psyssai.github.io/frontend/react/react_2_component_jsx/</guid>
      <description>안녕하세요. PSYda 입니다.
본 포스팅은 Nomad Coders 의 &amp;ldquo;React JS로 웹서비스 만들기&amp;rdquo;를 통해 학습한 내용을 정리한 것입니다.
이번 포스팅에서는 Component와 JSX에 대해 알아볼 예정이며 목차는 아래와 같습니다.
  (함수)Component JSX &amp; props 동적인 Component 사용(Map함수 이용) 유효한 Props 인지 Check하기    1. Component 1.1 Component란?  HTML을 반환해주는 함수 또는 클래스 함수 컴포넌트와 클래스 컴포넌트가 있음 독립적인 단위로서 재사용성이 높음  1.2 Component 만들기 별도의 Javascript 파일을 생성하여 아래와 같이 간단하게 Component를 만들 수 있습니다.</description>
    </item>
    
    <item>
      <title>[React]1.React 소개와 설치</title>
      <link>https://psyssai.github.io/frontend/react/react_1_introduction/</link>
      <pubDate>Fri, 27 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://psyssai.github.io/frontend/react/react_1_introduction/</guid>
      <description>안녕하세요. PSYda 입니다.
오늘은 React에 대해 간략하게 소개하고, 설치하는 과정을 포스팅할 예정입니다.
이전 시간에 말씀드린 것 처럼 Nomad Coders 의 &amp;ldquo;React JS로 웹서비스 만들기&amp;rdquo;를 통해 학습한 내용을 정리하였으며, 이번 포스팅에서 알아볼 내용은 아래와 같습니다.
 React에 대한 소개 React Setup React App 구조 및 동작 원리   1. React 소개 1.1 Why React? 1) 많은 회사들이 React를 사용
 React는 Facebook이 만들었고, 모든 Facebook은 React로 구현 Airbnb, npm, Netflix 등 유명한 서비스들이 React로 구현  2) 많은 개발자가 React를 사용</description>
    </item>
    
    <item>
      <title>[React]0.개요</title>
      <link>https://psyssai.github.io/frontend/react/react_0_overview/</link>
      <pubDate>Thu, 26 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://psyssai.github.io/frontend/react/react_0_overview/</guid>
      <description>안녕하세요. PSYda 입니다.
최근 Nomad Coders 의 &amp;ldquo;React JS로 웹서비스 만들기&amp;rdquo; 과정을 통해 React를 스터디 하고 있습니다.
강의를 들으며 제가 이해한 내용을 정리하여 올릴 예정입니다.
강의는 총 25개로 구성되어 있으며 한 강의당 10분 내외로 듣기에 부담이 없어 좋습니다.
해당 사이트를 통해 React 뿐만 아니라 Frontend 개발과 관련한 다른 좋은 강의들이 있어서 도움을 많이 받고 있습니다.
여기 사이트를 통해 무료 교육과 필요시 유료 교육을 들으실 수 있고, 강사님이 개발자들에 필요한 유용한 정보들을 Youtube에도 올려주시니 구독하시고 자주 들으시면 도움이 될 것 같습니다.</description>
    </item>
    
    <item>
      <title>[Pandas 기초]10.DataFrame의 집계(그룹핑) 함수</title>
      <link>https://psyssai.github.io/blog/bigdata/pandas/10_dataframe_grouping/</link>
      <pubDate>Sat, 31 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://psyssai.github.io/blog/bigdata/pandas/10_dataframe_grouping/</guid>
      <description>안녕하세요. PSYda입니다.
이번 포스팅에서는 DataFrame의 집계(그루핑) 함수에 대해 알아보겠습니다.
집계함수란 데이터를 몇몇의 집단으로 나누어 집단간 평균, 합계 등의 연산을 수행하는 함수를 얘기합니다.
예를 들어 고등학교 학생 전체 성적 데이터가 있을 경우 반별로 영어성적에 대한 평균을 내거나, 과목별로 학생들의 성적에 대한 평균을 내는 것과 같습니다.
예와 같이 집계함수를 적용하기 위해서는 3가지 값이 필요하며, 그 값은 그룹할 기준(반별 또는 과목별), 연산을 수행할 값(영어성적), 연산 함수(평균) 입니다.
이번 포스팅에서 소개할 내용을 요약하면 아래와 같습니다.</description>
    </item>
    
    <item>
      <title>[Pandas 기초]9.Series와 DataFrmae에 함수 적용하기</title>
      <link>https://psyssai.github.io/blog/bigdata/pandas/9_dataframe_applyfunction/</link>
      <pubDate>Thu, 29 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://psyssai.github.io/blog/bigdata/pandas/9_dataframe_applyfunction/</guid>
      <description>안녕하세요. PSYda입니다.
Series와 DataFrame을 다루다 보면 각각의 열/행 데이터에 함수를 일괄적으로 적용해야 할 때가 있습니다.
이번 포스팅에서는 Series와 DataFrame의 요소에 함수를 적용하는 방법에 대해 알아보겠습니다.
소개할 내용은 아래와 같습니다.
 Series 각각 요소에 함수 일괄 적용(map함수)  DataFrame의 행, 열 별 함수 일괄 적용(apply함수) DataFrame의 요소에 함수 일괄 적용(applymap함수)   8. Series와 DataFrame에 외부 함수 적용하기  map 함수 : Series에서 사용하며 모든 요소에 함수 일괄 적용 apply 함수 : DataFrame에서 사용하며 각각의 행 또는 열(Series)에 함수 일괄 적용 applymap 함수 : DataFrame에서 사용하며 모든 요소에 함수 일괄 적용  8.</description>
    </item>
    
    <item>
      <title>[Pandas 기초]8.Pandas DataFrame의 sort, rank 함수</title>
      <link>https://psyssai.github.io/blog/bigdata/pandas/8_dataframe_sortrank/</link>
      <pubDate>Wed, 28 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://psyssai.github.io/blog/bigdata/pandas/8_dataframe_sortrank/</guid>
      <description>안녕하세요. PSYda입니다.
이번 포스팅에서는 Pandas DataFrame의 sort(정렬), rank(순위)에 대해 알아보겠습니다.
소개할 내용은 아래와 같습니다.
 DataFrame의 정렬 함수(sort_values, sort_index) DataFrame의 순위 측정 함수(rank)   실습에 사용한 데이터는 fifa19에 등장하는 축구선수들의 능력치 데이터 입니다.
여기에서 다운 받을 수 있습니다.
7. DataFrame의 sort, rank 함수  sort 함수 : 데이터를 정렬하는 함수(sort_values, sort_index) rank 함수 : 데이터의 순위를 매기는 함수  7.1 DataFrame의 sort DataFrame에서는 sort를 index 및 column 기준으로 sort를 할 수 있다.</description>
    </item>
    
    <item>
      <title>[Pandas 기초]7.Pandas DataFrame 통계</title>
      <link>https://psyssai.github.io/blog/bigdata/pandas/7_dataframe_statistic/</link>
      <pubDate>Tue, 27 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://psyssai.github.io/blog/bigdata/pandas/7_dataframe_statistic/</guid>
      <description>안녕하세요. PSYda입니다.
이번 포스팅에서는 Pandas DataFrame의 통계에 대해 알아보겠습니다.
소개할 내용은 아래와 같습니다.
 DataFrame의 통계 함수 소개(주요통계량 출력, 평균, 표준편차, 최대/최소값, 상관계수 등) DataFame의 통계에 대한 시각화(히스토그램, 상관관계)   실습에 사용한 데이터는 fifa19에 등장하는 선술들의 능력치 데이터 입니다.
여기에서 다운로드 받을 수 있습니다.
6.Pandas DataFrame 통계 DataFrame의 주요한 통계 함수는 아래와 같습니다.
 Describe : 전체 주요 통계량 출력 sum : 합계 출력 cumsum : 누적합계 출력 mean : 평균값 출력 Std : 표준 편차 출력 var : 분산 출력 median : 중앙값 출력 count : 데이터 개수 출력 min, max, idxmin, idxmax : 최소값,최대값,최소값의 index, 최대값의 index 출력 corr, cov : 상관계수, 공분산 출력  위의 통계 함수를 비롯한 대부분의 함수에서 axis 옵션을 이용해 사용할 축을 설정할 수 있습니다.</description>
    </item>
    
    <item>
      <title>[Pandas 기초]6.Pandas DataFrame 산술 연산</title>
      <link>https://psyssai.github.io/blog/bigdata/pandas/6_dataframe_calc/</link>
      <pubDate>Thu, 22 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://psyssai.github.io/blog/bigdata/pandas/6_dataframe_calc/</guid>
      <description>안녕하세요. PSYda입니다.
이번 포스팅에서는 Pandas DataFrame의 산술 연산에 대해 알아보겠습니다.
소개할 내용은 아래와 같습니다.
 DataFrame과 DataFrame의 연산 함수 소개 DataFrame과 Sereis의 연산 함수 소개   5.Pandas DataFrame 산술 연산 DataFrame 의 연산은 아래의 두 가지 케이스가 있습니다.
 DataFrame vs DataFrame 연산 DataFrame vs Series 연산  5.1 DataFrame vs DataFrame 연산 DataFrame의 연산 규칙은 아래와 같습니다.
 같은 index 이면서 같은 column 명을 가진 두 value를 연산함 같은 index 이면서 같은 column 명을 가진 두 value 중 하나라도 NaN이 있으면 NaN으로 채워진다.</description>
    </item>
    
    <item>
      <title>[Pandas 기초]5.Pandas의 파일 입출력</title>
      <link>https://psyssai.github.io/blog/bigdata/pandas/5_dataframe_fileio/</link>
      <pubDate>Tue, 20 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://psyssai.github.io/blog/bigdata/pandas/5_dataframe_fileio/</guid>
      <description>안녕하세요. PSYda입니다.
이번 포스팅에서는 Pandas 데이터의 파일 입출력 방법에 대해 알아보겠습니다.
실습에 필요한 파일은 여기에서 다운로드 받을 수 있습니다.
소개할 내용은 아래와 같습니다.
 텍스트 파일 입력을 위한 read_csv 함수 소개 엑셀 파일 입력을 위한 read_excel 함수 소개 DataFrame의 텍스트 파일 출력을 위한 to_csv 함수 소개 DataFrame의 엑셀 파일 출력을 위한 to_excel 함수 소개   4. Pandas 파일 입출력 Pandas로 입출력 할 수 있는 파일 포맷은 매우 다양하지만 대표적으로 아래와 같습니다.</description>
    </item>
    
    <item>
      <title>[Pandas 기초]4.여러 DataFrame 연결하기(Join)</title>
      <link>https://psyssai.github.io/blog/bigdata/pandas/4_dataframe_merge/</link>
      <pubDate>Sat, 17 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://psyssai.github.io/blog/bigdata/pandas/4_dataframe_merge/</guid>
      <description>안녕하세요. PSYda 입니다.
이번 포스팅에서는 두 개의 DataFrame을 연결하는 Join 기법에 대해 알아보겠습니다.
소개할 내용은 아래와 같습니다.
 컬럼 기준 Join Index 기준 Join 행기준 Join Inner, Left, Right ,Outer Join  3. DataFrame Join 1) Join 이란?
 두 개의 DataFrame을 합치는 것 열기준 컬럼명으로 합치기 : merge 열기준 Index명로 합치기 : merge, concat 행기준으로 합치기 : concat, append
  2) 합치는 방법은?
 Inner : 두 DataFrame의 기준 컬럼에서 둘 다 존재하는 데이터만 Join Left Outer join : 왼쪽 DataFrame으로 합치기 Right Outer Join : 오른쪽 DataFrame으로 합치기 Outer Join : 두 DataFrame의 모든 Data를 합치기</description>
    </item>
    
    <item>
      <title>[Pandas 기초]3.Pandas의 자료구조-DataFrame</title>
      <link>https://psyssai.github.io/blog/bigdata/pandas/3_dataframe/</link>
      <pubDate>Fri, 16 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://psyssai.github.io/blog/bigdata/pandas/3_dataframe/</guid>
      <description>안녕하세요. PSYda입니다.
이번 포스팅에서는 Pandas의 DataFrame에 대해 알아보겠습니다.
소개할 내용은 아래와 같습니다.
 DataFrame 생성 DataFrame에 Data추가/삭제/조회  2. DataFrame DataFrame 이란?
  2차원 데이터   인덱스가 같은 하나 이상의 Series가 모여진 데이터   DBMS 의 관계형 Table 과 매우 유사    먼저 DataFrame을 사용하기 위해 Pandas 라이브러리를 import 합니다.
# pandas library import import pandas as pd from pandas import Series, DataFrame  2.</description>
    </item>
    
    <item>
      <title>[Pandas 기초]2.Pandas의 자료구조-Series</title>
      <link>https://psyssai.github.io/blog/bigdata/pandas/2_series/</link>
      <pubDate>Thu, 15 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://psyssai.github.io/blog/bigdata/pandas/2_series/</guid>
      <description>안녕하세요. PSYda 입니다.
Pandas는 2개의 자료구조(Series , DataFrame)를 가지고 있습니다.
Series는 1차원 데이터 구조, DataFrame은 2차원 데이터 구조를 나타냅니다.
이번 포스팅에서는 Series에 대해 아래와 같은 내용을 알아볼 예정입니다.
 Series 데이터의 생성 Series 데이터의 조회 Series 산술 연산 Series 통계  1. Series Series란?
 1차원 데이터 Index 와 Value 로 구성(Python의 사전데이터와 유사)   먼저 Series 나 DataFrame을 사용하기 위해 Pandas 라이브러리를 import 해야합니다.(설치는 이전 블로그를 참고해주세요.)</description>
    </item>
    
    <item>
      <title>[Pandas 기초]1.Pandas란 무엇인가?</title>
      <link>https://psyssai.github.io/blog/bigdata/pandas/1_overview/</link>
      <pubDate>Tue, 13 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://psyssai.github.io/blog/bigdata/pandas/1_overview/</guid>
      <description>안녕하세요. PSYda입니다.
오늘은 Pandas가 무엇인지 알아보겠습니다.
1. Pandas란? Pandas의 공식 Github에서 설명하는 Pandas는 아래와 같습니다.
 &amp;ldquo;관계형&amp;rdquo; 또는 &amp;ldquo;레이블이 된&amp;rdquo; 데이터로 쉽고 직관적으로 작업할 수 있도록 설계되었고 빠르고, 유연한 데이터 구조를 제공하는 Python 패키지
 관계형, 레이블이 된 데이터라는 말은 엑셀의 데이터나, DBMS의 관계형 테이블 형태와 같은 표형태의 데이터로 이해 할 수 있습니다. 아무튼 데이터를 쉽게 다룰 수 있고, 분석을 용이하게 해주는 파이썬 라이브러리라고 이해 할 수 있습니다.
2. Pandas로 할 수 있는 것은?</description>
    </item>
    
    <item>
      <title></title>
      <link>https://psyssai.github.io/hugo/shortcode/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://psyssai.github.io/hugo/shortcode/</guid>
      <description> 1. short code 란? markdown 내에 html을 편리하게 넣는 방법이다.
shortcode 정보
2. 이미지 포스팅  관련 short code : img-post.html 사용방법  
 path : 이미지 파일이 존재하는 폴더를 명시 file : 이미지 파일이름 명시(확장자 포함) alt : 이미지 별칭 명시 type : 정렬 방법 명시(center, left, right) 실 사용예시 
  </description>
    </item>
    
  </channel>
</rss>